// Tag styles

.tag {
  display: inline-block;
  padding: map-get($spacers, 1) map-get($spacers, 3);
  font-size: map-get($font-sizes, 'xs');
  font-weight: map-get($font-weights, 'medium');
  color: var(--color-primary-700);
  background-color: var(--color-primary-100);
  border-radius: $border-radius-full;
  transition: all $transition-fast;
  
  [data-theme="dark"] & {
    color: var(--color-primary-300);
    background-color: var(--color-primary-900);
    opacity: 0.8;
  }
  
  &:hover {
    color: var(--color-primary-800);
    background-color: var(--color-primary-200);
    transform: translateY(-1px);
    
    [data-theme="dark"] & {
      color: var(--color-primary-200);
      background-color: var(--color-primary-800);
      opacity: 0.9;
    }
  }
  
  // Clickable tags
  &.tag-link {
    text-decoration: none;
    cursor: pointer;
  }
  
  // Tag sizes
  &.tag-sm {
    padding: 0 map-get($spacers, 2);
    font-size: 0.75rem;
  }
  
  &.tag-lg {
    padding: map-get($spacers, 2) map-get($spacers, 4);
    font-size: map-get($font-sizes, 'sm');
  }
  
  // Tag variants
  &.tag-secondary {
    color: var(--color-text-secondary);
    background-color: var(--color-bg-tertiary);
    
    &:hover {
      color: var(--color-text);
      background-color: var(--color-gray-300);
    }
  }
  
  &.tag-success {
    color: #15803d; // darker green
    background-color: #bbf7d0; // lighter green
    
    [data-theme="dark"] & {
      color: #4ade80; // lighter green for dark mode
      background-color: rgba(34, 197, 94, 0.2);
    }
  }
  
  &.tag-warning {
    color: #b45309; // darker orange
    background-color: #fed7aa; // lighter orange
    
    [data-theme="dark"] & {
      color: #fbbf24; // lighter orange for dark mode
      background-color: rgba(245, 158, 11, 0.2);
    }
  }
  
  &.tag-error {
    color: #b91c1c; // darker red
    background-color: #fecaca; // lighter red
    
    [data-theme="dark"] & {
      color: #f87171; // lighter red for dark mode
      background-color: rgba(239, 68, 68, 0.2);
    }
  }
  
  // Tag with icon
  .tag-icon {
    margin-right: map-get($spacers, 1);
    font-size: 0.875em;
  }
  
  // Removable tag
  &.tag-removable {
    padding-right: map-get($spacers, 2);
    
    .tag-remove {
      margin-left: map-get($spacers, 2);
      padding: 0 map-get($spacers, 1);
      color: currentColor;
      opacity: 0.6;
      transition: opacity $transition-fast;
      
      &:hover {
        opacity: 1;
      }
    }
  }
}

// Tag group
.tag-group {
  display: flex;
  flex-wrap: wrap;
  gap: map-get($spacers, 2);
  margin: map-get($spacers, 3) 0;
}

// Tag cloud
.tag-cloud {
  display: flex;
  flex-wrap: wrap;
  gap: map-get($spacers, 3);
  justify-content: center;
  padding: map-get($spacers, 6);
  
  .tag {
    &[data-count="1"] { font-size: map-get($font-sizes, 'xs'); opacity: 0.7; }
    &[data-count="2"] { font-size: map-get($font-sizes, 'sm'); opacity: 0.8; }
    &[data-count="3"] { font-size: map-get($font-sizes, 'base'); opacity: 0.9; }
    &[data-count="4"] { font-size: map-get($font-sizes, 'lg'); }
    &[data-count="5"] { font-size: map-get($font-sizes, 'xl'); font-weight: map-get($font-weights, 'semibold'); }
  }
}

// Tag filter
.tag-filter {
  display: flex;
  flex-wrap: wrap;
  gap: map-get($spacers, 2);
  padding: map-get($spacers, 4);
  background-color: var(--color-bg-secondary);
  border-radius: $border-radius-lg;
  margin-bottom: map-get($spacers, 6);
  
  .tag-filter-label {
    font-size: map-get($font-sizes, 'sm');
    font-weight: map-get($font-weights, 'semibold');
    color: var(--color-text-secondary);
    margin-right: map-get($spacers, 2);
    align-self: center;
  }
  
  .tag {
    cursor: pointer;
    
    &.active {
      color: white;
      background-color: var(--color-primary-600);
      
      &:hover {
        background-color: var(--color-primary-700);
      }
    }
  }
  
  .tag-filter-clear {
    margin-left: auto;
    font-size: map-get($font-sizes, 'sm');
    color: var(--color-text-tertiary);
    align-self: center;
    cursor: pointer;
    transition: color $transition-fast;
    
    &:hover {
      color: var(--color-text-secondary);
    }
  }
}