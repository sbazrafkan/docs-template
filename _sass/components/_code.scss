// Code block styles

// Inline code
code {
  font-family: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Inconsolata', 'Fira Mono', monospace;
  font-size: 0.875em;
  background-color: var(--color-bg-tertiary);
  color: var(--color-primary-700);
  padding: 0.125em 0.375em;
  border-radius: $border-radius-sm;
  font-weight: map-get($font-weights, 'normal');
  
  [data-theme="dark"] & {
    color: var(--color-primary-400);
  }
}

// Code blocks
pre {
  position: relative;
  background-color: var(--color-gray-50);
  color: var(--color-gray-900);
  border-radius: $border-radius-lg;
  border: 1px solid var(--color-border);
  margin: map-get($spacers, 6) 0;
  overflow: hidden;
  
  [data-theme="dark"] & {
    background-color: #0d1117;
    color: #c9d1d9;
    border: none;
  }
  
  code {
    display: block;
    background-color: transparent;
    color: inherit;
    padding: map-get($spacers, 4);
    overflow-x: auto;
    font-family: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Inconsolata', 'Fira Mono', monospace;
    font-size: 0.875rem;
    line-height: 1.7;
    font-weight: normal;
    
    [data-theme="dark"] & {
      color: #c9d1d9;
    }
    
    &::-webkit-scrollbar {
      height: 6px;
    }
    
    &::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.1);
    }
    
    &::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.3);
      border-radius: $border-radius-full;
      
      &:hover {
        background: rgba(255, 255, 255, 0.4);
      }
    }
  }
}

// Code block wrapper
.code-block {
  position: relative;
  margin: map-get($spacers, 6) 0;
  
  // Ensure no borders in dark mode
  [data-theme="dark"] & {
    border: none !important;
    
    pre {
      border: none !important;
    }
  }
  
  &[data-language]::before {
    content: attr(data-language);
    position: absolute;
    top: 0;
    right: 0;
    padding: map-get($spacers, 1) map-get($spacers, 3);
    font-size: map-get($font-sizes, 'xs');
    font-weight: map-get($font-weights, 'medium');
    color: var(--color-gray-400);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    background-color: rgba(0, 0, 0, 0.2);
    border-bottom-left-radius: $border-radius;
    z-index: 5;
    
    [data-theme="dark"] & {
      background-color: rgba(0, 0, 0, 0.3);
    }
  }
}

// Copy button positioning and styling
.code-copy-button {
  position: absolute !important;
  top: map-get($spacers, 2) !important;
  right: map-get($spacers, 2) !important;
  padding: map-get($spacers, 1) map-get($spacers, 2);
  font-size: map-get($font-sizes, 'xs');
  font-weight: map-get($font-weights, 'medium');
  color: var(--color-gray-600);
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid var(--color-border);
  border-radius: $border-radius;
  transition: all $transition-fast;
  opacity: 0;
  z-index: 10;
  
  [data-theme="dark"] & {
    color: var(--color-gray-400);
    background-color: rgba(30, 41, 59, 0.9);
    border-color: var(--color-gray-700);
  }
}

pre:hover .code-copy-button,
.highlight:hover .code-copy-button,
.code-block:hover .code-copy-button {
  opacity: 1;
}

// Copy button hover and copied states
.code-copy-button {
  &:hover {
    color: var(--color-primary-600);
    background-color: var(--color-primary-50);
    border-color: var(--color-primary-200);
    
    [data-theme="dark"] & {
      color: var(--color-primary-400);
      background-color: var(--color-gray-700);
      border-color: var(--color-gray-600);
    }
  }
  
  &.copied {
    color: var(--color-success);
    
    &::after {
      content: ' âœ“';
    }
  }
}

// Remove extra Rouge copy button if it exists
.rouge-code .copy-to-clipboard-button {
  display: none;
}

// Fix line numbers container
.rouge-table {
  width: 100%;
  margin: 0;
  border-spacing: 0;
  background: transparent;
  
  td {
    padding: 0;
    vertical-align: top;
    border: none;
  }
  
  // Hide any copy buttons in the gutter
  .rouge-gutter {
    width: auto;
    min-width: 3em;
    padding-right: map-get($spacers, 3);
    text-align: right;
    background-color: transparent;
    user-select: none;
    
    pre {
      margin: 0;
      background: none;
      border: none;
      padding: map-get($spacers, 4) 0;
      color: var(--color-gray-500);
      
      [data-theme="dark"] & {
        color: var(--color-gray-600);
      }
    }
    
    // Hide any copy buttons in line numbers
    .code-copy-button,
    button {
      display: none !important;
    }
  }
  
  .rouge-code {
    padding-left: 0;
    width: 100%;
    
    pre {
      margin: 0;
      background: none;
      border: none;
      padding: map-get($spacers, 4) map-get($spacers, 4) map-get($spacers, 4) 0;
    }
  }
}

// Ensure highlight block doesn't add borders
.highlight {
  margin: map-get($spacers, 6) 0;
  background: transparent;
  border: none;
  position: relative;
  
  > pre {
    margin: 0;
  }
  
  // Override any borders in dark mode
  [data-theme="dark"] & {
    pre {
      border: none;
    }
  }
}

// Code blocks inside steps should follow theme
.step-content {
  pre {
    background-color: var(--color-gray-50);
    
    [data-theme="dark"] & {
      background-color: #0d1117;
      border: none;
    }
  }
  
  code {
    [data-theme="dark"] & {
      color: #c9d1d9;
    }
  }
}

// Syntax highlighting (using Rouge/Prism classes)
.highlight {
  .c { color: #6a737d; } // Comment
  .err { color: #f97583; } // Error
  .k { color: #d73a49; } // Keyword
  .o { color: #d73a49; } // Operator
  .cm { color: #6a737d; } // Comment.Multiline
  .cp { color: #d73a49; } // Comment.Preproc
  .c1 { color: #6a737d; } // Comment.Single
  .cs { color: #6a737d; } // Comment.Special
  .gd { color: #f97583; background-color: #ffdce0; } // Generic.Deleted
  .ge { font-style: italic; } // Generic.Emph
  .gh { color: #005cc5; font-weight: bold; } // Generic.Heading
  .gi { color: #22863a; background-color: #dafbe1; } // Generic.Inserted
  .gp { color: #6a737d; } // Generic.Prompt
  .gs { font-weight: bold; } // Generic.Strong
  .gu { color: #6a737d; } // Generic.Subheading
  .kc { color: #005cc5; } // Keyword.Constant
  .kd { color: #d73a49; } // Keyword.Declaration
  .kn { color: #d73a49; } // Keyword.Namespace
  .kp { color: #d73a49; } // Keyword.Pseudo
  .kr { color: #d73a49; } // Keyword.Reserved
  .kt { color: #005cc5; } // Keyword.Type
  .m { color: #005cc5; } // Literal.Number
  .s { color: #032f62; } // Literal.String
  .na { color: #22863a; } // Name.Attribute
  .nb { color: #005cc5; } // Name.Builtin
  .nc { color: #6f42c1; } // Name.Class
  .no { color: #005cc5; } // Name.Constant
  .nd { color: #6f42c1; } // Name.Decorator
  .ni { color: #005cc5; } // Name.Entity
  .ne { color: #005cc5; } // Name.Exception
  .nf { color: #6f42c1; } // Name.Function
  .nl { color: #005cc5; } // Name.Label
  .nn { color: #005cc5; } // Name.Namespace
  .nx { color: #22863a; } // Name.Other
  .py { color: #22863a; } // Name.Property
  .nt { color: #22863a; } // Name.Tag
  .nv { color: #005cc5; } // Name.Variable
  .ow { color: #d73a49; } // Operator.Word
  .w { color: #f6f8fa; } // Text.Whitespace
  .mf { color: #005cc5; } // Literal.Number.Float
  .mh { color: #005cc5; } // Literal.Number.Hex
  .mi { color: #005cc5; } // Literal.Number.Integer
  .mo { color: #005cc5; } // Literal.Number.Oct
  .sb { color: #032f62; } // Literal.String.Backtick
  .sc { color: #032f62; } // Literal.String.Char
  .sd { color: #032f62; } // Literal.String.Doc
  .s2 { color: #032f62; } // Literal.String.Double
  .se { color: #032f62; } // Literal.String.Escape
  .sh { color: #032f62; } // Literal.String.Heredoc
  .si { color: #005cc5; } // Literal.String.Interpol
  .sx { color: #032f62; } // Literal.String.Other
  .sr { color: #032f62; } // Literal.String.Regex
  .s1 { color: #032f62; } // Literal.String.Single
  .ss { color: #005cc5; } // Literal.String.Symbol
  .bp { color: #005cc5; } // Name.Builtin.Pseudo
  .vc { color: #005cc5; } // Name.Variable.Class
  .vg { color: #005cc5; } // Name.Variable.Global
  .vi { color: #005cc5; } // Name.Variable.Instance
  .il { color: #005cc5; } // Literal.Number.Integer.Long
  
  // Dark theme adjustments - GitHub-style colors with better visibility
  [data-theme="dark"] & {
    // Default text color for better visibility
    color: #c9d1d9;
    
    .c { color: #8b949e; } // Comment
    .err { color: #ff7b72; } // Error
    .k { color: #ff7b72; } // Keyword
    .o { color: #ff7b72; } // Operator
    .cm { color: #8b949e; } // Comment.Multiline
    .cp { color: #ff7b72; } // Comment.Preproc
    .c1 { color: #8b949e; } // Comment.Single
    .cs { color: #8b949e; } // Comment.Special
    .gd { color: #ffdcd7; background-color: #4e1c1c; } // Generic.Deleted
    .gh { color: #79c0ff; } // Generic.Heading
    .gi { color: #aff5b4; background-color: #1a3a1a; } // Generic.Inserted
    .gp { color: #8b949e; } // Generic.Prompt
    .gu { color: #8b949e; } // Generic.Subheading
    .kc { color: #79c0ff; } // Keyword.Constant
    .kd { color: #ff7b72; } // Keyword.Declaration
    .kn { color: #ff7b72; } // Keyword.Namespace
    .kp { color: #ff7b72; } // Keyword.Pseudo
    .kr { color: #ff7b72; } // Keyword.Reserved
    .kt { color: #79c0ff; } // Keyword.Type
    .m { color: #79c0ff; } // Literal.Number
    .s { color: #a5d6ff; } // Literal.String
    .na { color: #7ee787; } // Name.Attribute
    .nb { color: #79c0ff; } // Name.Builtin
    .nc { color: #d2a8ff; } // Name.Class
    .no { color: #79c0ff; } // Name.Constant
    .nd { color: #d2a8ff; } // Name.Decorator
    .ni { color: #79c0ff; } // Name.Entity
    .ne { color: #79c0ff; } // Name.Exception
    .nf { color: #d2a8ff; } // Name.Function
    .nl { color: #79c0ff; } // Name.Label
    .nn { color: #ff7b72; } // Name.Namespace
    .nx { color: #7ee787; } // Name.Other
    .py { color: #7ee787; } // Name.Property
    .nt { color: #7ee787; } // Name.Tag
    .nv { color: #79c0ff; } // Name.Variable
    .ow { color: #ff7b72; } // Operator.Word
    .mf { color: #79c0ff; } // Literal.Number.Float
    .mh { color: #79c0ff; } // Literal.Number.Hex
    .mi { color: #79c0ff; } // Literal.Number.Integer
    .mo { color: #79c0ff; } // Literal.Number.Oct
    .sb { color: #a5d6ff; } // Literal.String.Backtick
    .sc { color: #a5d6ff; } // Literal.String.Char
    .sd { color: #8b949e; } // Literal.String.Doc
    .s2 { color: #a5d6ff; } // Literal.String.Double
    .se { color: #79c0ff; } // Literal.String.Escape
    .sh { color: #79c0ff; } // Literal.String.Heredoc
    .si { color: #a5d6ff; } // Literal.String.Interpol
    .sx { color: #a5d6ff; } // Literal.String.Other
    .sr { color: #79c0ff; } // Literal.String.Regex
    .s1 { color: #a5d6ff; } // Literal.String.Single
    .ss { color: #a5d6ff; } // Literal.String.Symbol
    .bp { color: #79c0ff; } // Name.Builtin.Pseudo
    .vc { color: #79c0ff; } // Name.Variable.Class
    .vg { color: #79c0ff; } // Name.Variable.Global
    .vi { color: #79c0ff; } // Name.Variable.Instance
    .il { color: #79c0ff; } // Literal.Number.Integer.Long
    
    // Plain text and tokens without specific classes
    .n { color: #c9d1d9; } // Name (generic)
    .p { color: #c9d1d9; } // Punctuation
    .w { color: #c9d1d9; } // Text.Whitespace
    
    // Make sure plain text is visible
    span:not([class]) { color: #c9d1d9; }
  }
}